@use '../utils/functions' as fn;
@use '../global//colors' as colors;
// @import '../../scss/utils/breakpoints';

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

$min_width: 320px;
$max_width: 1440px;
$min_font: 24px;
$max_font: 48px;

// h1,
// h2,
// h3,
// h4,
// h5,
// h6 {
//   // letter-spacing: fn.rem(0.5);
//   // line-height: fn.rem(0);
// }

h1,
h2,
h3 {
  font-weight: 800;
  // margin-block-end: 1rem;
}

h4,
h5,
h6 {
  font-weight: 700;
  // margin-block-end: 0.5rem;
}

h1 {
  @include fluid-type($min_width, $max_width, 32px, 64px);
}

h2 {
  @include fluid-type($min_width, $max_width, 28px, 48px);
}

h3 {
  @include fluid-type($min_width, $max_width, 20px, 40px);
}

h4 {
  @include fluid-type($min_width, $max_width, 18px, 32px);
}

h5 {
  @include fluid-type($min_width, $max_width, 18px, 24px);
}

h6 {
  @include fluid-type($min_width, $max_width, 16px, 18px);
}

p,
span,
label {
  margin-block: 0;
  @include fluid-type($min_width, $max_width, 12.5px, 16px);
}

.tiny-text {
  @include fluid-type($min_width, $max_width, 10px, 12px);
}
.small-text {
  @include fluid-type($min_width, $max_width, 12px, 14px);
}
.medium-text {
  @include fluid-type($min_width, $max_width, 16px, 20px);
}
.large-text {
  @include fluid-type($min_width, $max_width, 16px, 24px);
}
.btn-text {
  @include fluid-type($min_width, $max_width, 14px, 16px);
}
