{"version":3,"file":"libs_shared_redux_src_index_ts.js","mappings":"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","sources":["webpack://auth/../../libs/shared/redux/src/index.ts","webpack://auth/../../libs/shared/redux/src/lib/apiSlice.ts","webpack://auth/../../libs/shared/redux/src/lib/auth-state/authApiSlice.ts","webpack://auth/../../libs/shared/redux/src/lib/auth-state/authSlice.ts","webpack://auth/../../libs/shared/redux/src/lib/store.ts","webpack://auth/../../libs/shared/redux/src/lib/user-state/userApiSlice.ts","webpack://auth/../../libs/shared/redux/src/lib/user-state/userSlice.ts"],"sourcesContent":["export * from './lib/store';\r\nexport * from './lib/auth-state/authApiSlice';\r\nexport * from './lib/auth-state/authSlice';\r\nexport * from './lib/user-state/userSlice';\r\nexport * from './lib/user-state/userApiSlice';\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\n// console.log('test', process.env['NX_BASE_URL']);\r\n\r\nconst baseQuery = fetchBaseQuery({\r\n  baseUrl: process.env['NX_BASE_URL'],\r\n  prepareHeaders: (headers, { getState }: any) => {\r\n    const token = getState().Auth.token;\r\n    // if we have a token, set the auth header value\r\n    if (token) {\r\n      headers.set('Authorization', `Bearer ${token}`);\r\n      // headers.set('Content-Type', `multipart/form-data`);\r\n    }\r\n    return headers;\r\n  },\r\n});\r\n\r\nexport const apiSlice = createApi({\r\n  baseQuery,\r\n  tagTypes: ['', ''],\r\n  endpoints: () => ({}),\r\n});\r\n","import { apiSlice } from '../apiSlice';\r\nimport { resetUserStore, setTaskCount, setUser } from '../user-state/userSlice';\r\nimport { logOut, setCredentials, setFPEmailConfirmation } from './authSlice';\r\n\r\nexport const authApiSlice = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    login: builder.mutation({\r\n      query: (credentials) => ({\r\n        url: '/auth/login',\r\n        method: 'POST',\r\n        body: { ...credentials },\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          dispatch(\r\n            setCredentials({\r\n              accessToken: data.token,\r\n            })\r\n          );\r\n          dispatch(\r\n            setUser({\r\n              user: data.user,\r\n            })\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n\r\n    signup: builder.mutation({\r\n      query: (credentials) => ({\r\n        url: '/auth/register',\r\n        method: 'POST',\r\n        body: { ...credentials },\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          dispatch(\r\n            setCredentials({\r\n              accessToken: data.token,\r\n            })\r\n          );\r\n          dispatch(\r\n            setUser({\r\n              user: data.user,\r\n            })\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n\r\n    googleAuth: builder.mutation({\r\n      query: () => ({\r\n        url: `/auth/oauth/redirect?provider=google`,\r\n        method: 'GET',\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          if (data.redirect_url) {\r\n            // Redirect the user to the obtained OAuth provider URL\r\n            window.location.href = data.redirect_url;\r\n          } else {\r\n            // Handle error or unsupported provider\r\n            console.error(`Failed to obtain redirect URL for google`);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n    googleAuthCallback: builder.mutation({\r\n      query: (credentials) => ({\r\n        url: `/auth/oauth/callback`,\r\n        method: 'POST',\r\n        body: { ...credentials },\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          dispatch(\r\n            setCredentials({\r\n              accessToken: data.token,\r\n            })\r\n          );\r\n          dispatch(\r\n            setUser({\r\n              user: data.user,\r\n            })\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n\r\n    forgotPassword: builder.mutation({\r\n      query: (credentials) => ({\r\n        url: '/auth/forgot-password',\r\n        method: 'POST',\r\n        body: { ...credentials },\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          console.log(data);\r\n          dispatch(\r\n            setFPEmailConfirmation({\r\n              emailSent: true,\r\n              email: arg.email,\r\n            })\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n    resetPassword: builder.mutation({\r\n      query: (credentials) => ({\r\n        url: '/auth/reset-password',\r\n        method: 'POST',\r\n        body: { ...credentials },\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          console.log(data);\r\n          dispatch(\r\n            setFPEmailConfirmation({\r\n              emailSent: false,\r\n              email: null,\r\n            })\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n\r\n    logout: builder.mutation({\r\n      query: () => ({\r\n        url: '/auth/logout',\r\n        method: 'POST',\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          console.log(data);\r\n          dispatch(logOut());\r\n          dispatch(resetUserStore());\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useLoginMutation,\r\n  useSignupMutation,\r\n  useGoogleAuthMutation,\r\n  useGoogleAuthCallbackMutation,\r\n  useForgotPasswordMutation,\r\n  useResetPasswordMutation,\r\n  useLogoutMutation,\r\n} = authApiSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface AuthState {\r\n  token: string | null;\r\n  forgotPasswordEmailConfirmation: object | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  token: null,\r\n  forgotPasswordEmailConfirmation: {\r\n    emailSent: false,\r\n    email: null,\r\n  },\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'Auth',\r\n  initialState,\r\n  reducers: {\r\n    setCredentials: (state, action) => {\r\n      const { accessToken } = action.payload;\r\n      state.token = accessToken;\r\n    },\r\n    setFPEmailConfirmation: (state, action) => {\r\n      // FP - Forgot Password\r\n      state.forgotPasswordEmailConfirmation = action.payload;\r\n    },\r\n    logOut: (state) => {\r\n      Object.assign(state, initialState);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCredentials, logOut, setFPEmailConfirmation } =\r\n  authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n\r\nexport const selectCurrentToken = (state: any) => state.Auth.token;\r\nexport const selectEmailConfirmation = (state: any) =>\r\n  state.Auth.forgotPasswordEmailConfirmation;\r\n","// app/store.ts\r\nimport authReducer from './auth-state/authSlice';\r\nimport userReducer from './user-state/userSlice';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { apiSlice } from './apiSlice';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  version: 1,\r\n  storage,\r\n};\r\nconst userPersistConfig = {\r\n  key: 'user',\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst authPersistedReducer = persistReducer(authPersistConfig, authReducer);\r\nconst userPersistedReducer = persistReducer(userPersistConfig, userReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [apiSlice.reducerPath]: apiSlice.reducer,\r\n    Auth: authPersistedReducer,\r\n    User: userPersistedReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }).concat(apiSlice.middleware),\r\n  // devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\nexport const persistor = persistStore(store);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n","import { apiSlice } from '../apiSlice';\r\nimport { setTaskCount, setUser } from './userSlice';\r\n\r\nexport const userApiSlice = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getUser: builder.mutation({\r\n      query: () => ({\r\n        url: `/users/me`,\r\n        method: 'GET',\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          dispatch(\r\n            setUser({\r\n              user: data.data,\r\n            })\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n\r\n    verifyEmail: builder.mutation({\r\n      query: () => ({\r\n        url: `/auth/email/resend`,\r\n        method: 'GET',\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          console.log(data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n\r\n    upgradePlan: builder.mutation({\r\n      query: () => ({\r\n        url: `/payments/subscription`,\r\n        method: 'POST',\r\n      }),\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          console.log(data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n\r\n    updateProfile: builder.mutation({\r\n      query: (credentials) => ({\r\n        url: `/users/me`,\r\n        method: 'POST',\r\n        body: { ...credentials },\r\n        // headers: {\r\n        //   'Content-Type': 'multipart/form-data',\r\n        // },\r\n      }),\r\n\r\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n        console.log(arg);\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          console.log(data);\r\n          dispatch(\r\n            setUser({\r\n              user: data.data,\r\n            })\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useUpgradePlanMutation,\r\n  useVerifyEmailMutation,\r\n  useUpdateProfileMutation,\r\n} = userApiSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface UserState {\r\n  profile: object | null;\r\n  guideTaskCompleted: number | 0;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  profile: null,\r\n  guideTaskCompleted: 0,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'User',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      const { user } = action.payload;\r\n\r\n      state.profile = user;\r\n    },\r\n    setTaskCount: (state, action) => {\r\n      if (action.payload) {\r\n        if (state.guideTaskCompleted !== 5) {\r\n          state.guideTaskCompleted++;\r\n        }\r\n      } else {\r\n        state.guideTaskCompleted = 0;\r\n      }\r\n    },\r\n\r\n    resetUserStore: (state) => {\r\n      Object.assign(state, initialState);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, setTaskCount, resetUserStore } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const selectCurrentUser = (state: any) => state.User.profile;\r\nexport const selectTaskCompletedCount = (state: any) =>\r\n  state.User.guideTaskCompleted;\r\n"],"names":["createApi","fetchBaseQuery","baseQuery","baseUrl","process","env","prepareHeaders","headers","getState","token","Auth","set","apiSlice","tagTypes","endpoints","resetUserStore","setUser","logOut","setCredentials","setFPEmailConfirmation","authApiSlice","injectEndpoints","builder","login","mutation","query","credentials","url","method","body","Object","assign","onQueryStarted","arg","dispatch","queryFulfilled","data","accessToken","user","err","console","log","signup","googleAuth","redirect_url","window","location","href","error","googleAuthCallback","forgotPassword","emailSent","email","resetPassword","logout","useLoginMutation","useSignupMutation","useGoogleAuthMutation","useGoogleAuthCallbackMutation","useForgotPasswordMutation","useResetPasswordMutation","useLogoutMutation","createSlice","initialState","forgotPasswordEmailConfirmation","authSlice","name","reducers","state","action","payload","actions","reducer","selectCurrentToken","selectEmailConfirmation","authReducer","userReducer","configureStore","setupListeners","persistReducer","persistStore","storage","authPersistConfig","key","version","userPersistConfig","authPersistedReducer","userPersistedReducer","store","reducerPath","User","middleware","getDefaultMiddleware","serializableCheck","concat","persistor","userApiSlice","getUser","verifyEmail","upgradePlan","updateProfile","useUpgradePlanMutation","useVerifyEmailMutation","useUpdateProfileMutation","profile","guideTaskCompleted","userSlice","setTaskCount","selectCurrentUser","selectTaskCompletedCount"],"sourceRoot":""}