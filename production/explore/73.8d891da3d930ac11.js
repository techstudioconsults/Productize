(self.webpackChunkexplore=self.webpackChunkexplore||[]).push([[73,662],{5073:(t,e,o)=>{o.r(e),o.d(e,{authApiSlice:()=>C,logOut:()=>u,persistor:()=>b,selectCurrentToken:()=>l,selectCurrentuser:()=>c,selectEmailConfirmation:()=>d,setCredentials:()=>r,setFPEmailConfirmation:()=>n,store:()=>k,useForgotPasswordMutation:()=>F,useGoogleAuthCallbackMutation:()=>O,useGoogleAuthMutation:()=>M,useLoginMutation:()=>P,useLogoutMutation:()=>E,useResetPasswordMutation:()=>T,useSignupMutation:()=>q});var a=o(3514);const s=(0,a.createSlice)({name:"auth",initialState:{token:null,user:null,forgotPasswordEmailConfirmation:{emailSent:!1,email:null}},reducers:{setCredentials:(t,e)=>{const{accessToken:o,user:a}=e.payload;t.token=o,t.user=a},setFPEmailConfirmation:(t,e)=>{t.forgotPasswordEmailConfirmation=e.payload},logOut:t=>{t.token=null,t.user=null,t.forgotPasswordEmailConfirmation={emailSent:!1,email:null}}}}),{setCredentials:r,logOut:u,setFPEmailConfirmation:n}=s.actions,i=s.reducer,l=t=>t.auth.token,c=t=>t.auth.user,d=t=>t.auth.forgotPasswordEmailConfirmation;var g=o(3850),h=o(7345),y=o(4549),m=o(1598);console.log("test","https://productize-api.techstudio.academy/api");const p=(0,g.ni)({baseUrl:"https://productize-api.techstudio.academy/api",prepareHeaders:(t,{getState:e})=>{const o=e().auth.token;return o&&t.set("Authorization",`Bearer ${o}`),t}}),f=(0,m.LC)({baseQuery:p,tagTypes:["",""],endpoints:()=>({})}),w={key:"root",version:1,storage:y.Z},S=(0,h.persistReducer)(w,i),k=(0,a.configureStore)({reducer:{[f.reducerPath]:f.reducer,auth:S},middleware:t=>t({serializableCheck:!1}).concat(f.middleware)});(0,g.sj)(k.dispatch);const b=(0,h.persistStore)(k),C=f.injectEndpoints({endpoints:t=>({login:t.mutation({query:t=>({url:"/auth/login",method:"POST",body:Object.assign({},t)}),async onQueryStarted(t,{dispatch:e,queryFulfilled:o}){try{const{data:t}=await o;e(r({accessToken:t.token,user:t.user}))}catch(t){console.log(t)}}}),signup:t.mutation({query:t=>({url:"/auth/register",method:"POST",body:Object.assign({},t)}),async onQueryStarted(t,{dispatch:e,queryFulfilled:o}){try{const{data:t}=await o;e(r({accessToken:t.token,user:t.user}))}catch(t){console.log(t)}}}),googleAuth:t.mutation({query:()=>({url:"/auth/oauth/redirect?provider=google",method:"GET"}),async onQueryStarted(t,{dispatch:e,queryFulfilled:o}){try{const{data:t}=await o;t.redirect_url?window.location.href=t.redirect_url:console.error("Failed to obtain redirect URL for google")}catch(t){console.log(t)}}}),googleAuthCallback:t.mutation({query:t=>({url:"/auth/oauth/callback",method:"POST",body:Object.assign({},t)}),async onQueryStarted(t,{dispatch:e,queryFulfilled:o}){try{const{data:t}=await o;e(r({accessToken:t.token,user:t.user}))}catch(t){console.log(t)}}}),forgotPassword:t.mutation({query:t=>({url:"/auth/forgot-password",method:"POST",body:Object.assign({},t)}),async onQueryStarted(t,{dispatch:e,queryFulfilled:o}){try{const{data:a}=await o;console.log(a),e(n({emailSent:!0,email:t.email}))}catch(t){console.log(t)}}}),resetPassword:t.mutation({query:t=>({url:"/auth/reset-password",method:"POST",body:Object.assign({},t)}),async onQueryStarted(t,{dispatch:e,queryFulfilled:o}){try{const{data:t}=await o;console.log(t),e(n({emailSent:!1,email:null}))}catch(t){console.log(t)}}}),logout:t.mutation({query:()=>({url:"/auth/logout",method:"POST"}),async onQueryStarted(t,{dispatch:e,queryFulfilled:o}){try{const{data:t}=await o;console.log(t),e(u())}catch(t){console.log(t)}}})})}),{useLoginMutation:P,useSignupMutation:q,useGoogleAuthMutation:M,useGoogleAuthCallbackMutation:O,useForgotPasswordMutation:F,useResetPasswordMutation:T,useLogoutMutation:E}=C}}]);