{"version":3,"file":"vendors-node_modules_react-router-dom_dist_index_js.js","mappings":"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","sources":["webpack://auth/../../node_modules/@remix-run/router/history.ts","webpack://auth/../../node_modules/@remix-run/router/utils.ts","webpack://auth/../../node_modules/@remix-run/router/router.ts","webpack://auth/../../node_modules/react-router-dom/dom.ts","webpack://auth/../../node_modules/react-router-dom/index.tsx","webpack://auth/../../node_modules/react-router/lib/context.ts","webpack://auth/../../node_modules/react-router/lib/hooks.tsx","webpack://auth/../../node_modules/react-router/lib/components.tsx","webpack://auth/../../node_modules/react-router/index.ts"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod | V7_FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<Omit<R, ImmutableRouteKey>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        const starParam = params[star];\n\n        // Apply the splat\n        return starParam;\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n\n        if (optional === \"?\") {\n          return param == null ? \"\" : param;\n        }\n\n        if (param == null) {\n          invariant(false, `Missing \":${key}\" param`);\n        }\n\n        return param;\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\ntype BaseNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  fromRouteId?: string;\n};\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a mutation submission.\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n    if (\n      state.initialized &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission || fetcherSubmission\n        ? submission || fetcherSubmission\n        : loadingNavigation.formMethod &&\n          loadingNavigation.formAction &&\n          loadingNavigation.formData &&\n          loadingNavigation.formEncType\n        ? {\n            formMethod: loadingNavigation.formMethod,\n            formAction: loadingNavigation.formAction,\n            formData: loadingNavigation.formData,\n            formEncType: loadingNavigation.formEncType,\n          }\n        : undefined;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach((rf) => {\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (\n      ABSOLUTE_URL_REGEX.test(redirect.location) &&\n      isBrowser &&\n      typeof window?.location !== \"undefined\"\n    ) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (window.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: normalizeFormMethod\n        ? (formMethod.toUpperCase() as V7_FormMethod)\n        : (formMethod.toLowerCase() as FormMethod),\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params,\n      ...submission,\n      actionResult,\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      defaultShouldRevalidate: isRevalidationRequired,\n    });\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  options: SubmitOptions,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string | null = null;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr =\n        target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(\n  fetcherKey?: string,\n  fetcherRouteId?: string\n): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { action, method, encType, formData } = getFormSubmissionInfo(\n        target,\n        options,\n        basename\n      );\n\n      // Base options shared between fetch() and navigate()\n      let opts = {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as HTMLFormMethod,\n        formEncType: encType as FormEncType,\n      };\n\n      if (fetcherKey) {\n        invariant(\n          fetcherRouteId != null,\n          \"No routeId available for useFetcher()\"\n        );\n        router.fetch(fetcherKey, fetcherRouteId, action, opts);\n      } else {\n        router.navigate(action, {\n          ...opts,\n          replace: options.replace,\n          fromRouteId: currentRouteId,\n        });\n      }\n    },\n    [router, basename, fetcherKey, fetcherRouteId, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setState] = React.useState(router.state);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n"],"names":["Action","PopStateEventType","createMemoryHistory","options","initialEntries","initialIndex","v5Compat","entries","map","entry","index","createMemoryLocation","state","undefined","clampIndex","length","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","key","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","history","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","createBrowserLocation","window","globalHistory","usr","createBrowserHref","getUrlBasedHistory","createHashHistory","createHashLocation","substr","createHashHref","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","validateHashLocation","invariant","value","message","Error","cond","console","warn","e","createKey","random","toString","getHistoryState","idx","current","parsedPath","searchIndex","getLocation","validateLocation","defaultView","getIndex","replaceState","handlePop","historyState","pushState","error","assign","origin","addEventListener","removeEventListener","ResultType","immutableRouteKeys","Set","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","id","join","children","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","startsWith","joinPaths","routesMeta","concat","score","computeScore","forEach","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","Object","params","pathnameBase","normalizePathname","generatePath","originalPath","prefix","array","isLastSegment","star","starParam","keyMatch","optional","param","pattern","matcher","paramNames","compilePath","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","regexpSource","_","RegExp","decodeURI","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","getToPathname","paths","json","data","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","DeferredData","constructor","pendingKeysSet","subscribers","deferredKeys","Array","isArray","reject","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","done","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","emit","settledKey","subscriber","subscribe","cancel","abort","v","k","resolveData","resolve","size","unwrappedData","unwrapTrackedPromise","pendingKeys","isTrackedPromise","_tracked","_error","_data","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","isBrowser","createElement","isServer","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","detectErrorBoundary","dataRoutes","inFlightDataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","initialized","m","lazy","loader","router","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","Map","blockers","pendingAction","HistoryAction","pendingPreventScrollReset","pendingNavigationController","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","initialize","blockerKey","shouldBlockNavigation","currentLocation","updateBlocker","deleteBlocker","updateState","startNavigation","dispose","clear","deleteFetcher","newState","completeNavigation","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","getSavedScrollPosition","navigate","opts","normalizedPath","normalizeTo","fromRouteId","relative","submission","normalizeNavigateOptions","userReplace","pendingError","revalidate","interruptActiveLoads","startUninterruptedRevalidation","overrideNavigation","saveScrollPosition","routesToUse","loadingNavigation","notFoundMatches","cancelActiveDeferreds","isHashChangeOnly","request","createClientSideRequest","pendingActionData","findNearestBoundary","actionOutput","handleAction","shortCircuited","pendingActionError","Request","handleLoaders","fetcherSubmission","actionMatch","getTargetMatch","type","method","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","isDeferredResult","activeSubmission","matchesToLoad","revalidatingFetchers","getMatchesToLoad","updatedFetchers","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","abortPendingFetchRevalidations","f","abortFetcher","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","getFetcher","fetch","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","isFetchActionRedirect","revalidationRequest","loadId","loadFetcher","staleKey","doneFetcher","resolveDeferredData","redirectLocation","_isFetchActionRedirect","isDifferentBasename","redirectHistoryAction","currentMatches","fetchersToLoad","all","resolveDeferredResults","markFetchersDone","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","userMatches","createUseMatchesMatch","_internalSetRoutes","newRoutes","_internalFetchControllers","_internalActiveDeferreds","UNSAFE_DEFERRED_SYMBOL","Symbol","createStaticHandler","query","requestContext","isValidMethod","methodNotAllowedMatches","statusCode","loaderHeaders","actionHeaders","queryImpl","isResponse","queryRoute","find","values","routeMatch","submit","loadRouteData","isQueryRouteResponse","isRedirectResponse","response","isRouteRequest","Location","context","loaderRequest","getLoaderMatchesUntilBoundary","processRouteLoaderData","executedLoaders","fromEntries","getStaticContextFromError","newContext","_deepestRenderedBoundaryId","isSubmissionNavigation","prependBasename","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","toUpperCase","stripHashFromPath","searchParams","convertFormDataToSearchParams","append","boundaryId","boundaryMatches","findIndex","currentUrl","nextUrl","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","isStaticRequest","resultType","onReject","runHandler","handler","protocol","isSameBasename","contentType","text","isDeferredData","deferred","body","URLSearchParams","File","name","foundError","newLoaderData","mergedLoaderData","hasOwnProperty","eligibleMatches","reverse","errorMessage","obj","signals","isRevalidatingLoader","unwrap","getAll","handle","pathMatches","defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","getSearchParamsForLocation","locationSearch","defaultSearchParams","getFormSubmissionInfo","encType","submissionTrigger","attr","FormData","form","createBrowserRouter","parseHydrationData","createHashRouter","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","stack","BrowserRouter","historyRef","React","useRef","setState","useState","useLayoutEffect","Router","navigationType","navigator","HashRouter","HistoryRouter","displayName","Link","forwardRef","LinkWithRef","ref","onClick","reloadDocument","useContext","NavigationContext","absoluteHref","isExternal","targetUrl","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","className","classNameProp","style","styleProp","useResolvedPath","useLocation","routerState","DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","Form","props","FormImpl","forwardedRef","onSubmit","fetcherKey","useSubmitImpl","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","DataRouterContext","useDataRouterState","replaceProp","useNavigate","useCallback","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","fetcherRouteId","UseSubmitImpl","currentRouteId","useRouteId","routeContext","RouteContext","createFetcherForm","FetcherForm","fetcherId","useFetcher","UseFetcher","String","load","fetcherWithComponents","useEffect","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","UseScrollRestoration","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","parse","disableScrollRestoration","scrollTo","el","getElementById","scrollIntoView","useBeforeUnload","callback","capture","usePrompt","when","useBlocker","confirm","setTimeout","createContext","AwaitContext","LocationContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","joinedPathname","useNavigationType","useMatch","navigateEffectWarning","useIsomorphicLayoutEffect","cb","isStatic","static","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","activeRef","OutletContext","useOutletContext","useOutlet","useParams","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","element","Component","renderedMatches","_renderMatches","NavigationType","DefaultErrorComponent","useRouteError","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","fontStyle","defaultErrorElement","RenderErrorBoundary","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","errorIndex","reduceRight","getChildren","useRouteContext","useCurrentRouteId","thisRoute","UseRouteId","UseNavigation","useRevalidator","UseRevalidator","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","UseRouteError","useAsyncValue","useAsyncError","blockerId","shouldBlock","UseBlocker","args","UseNavigateStable","alreadyWarned","RouterProvider","fallbackElement","DataRoutes","MemoryRouter","Navigate","jsonPath","Outlet","Route","_props","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","createRoutesFromChildren","Await","AwaitRenderStatus","neverSettledPromise","AwaitErrorBoundary","pending","success","renderError","ResolveAwait","toRender","Children","isValidElement","Fragment","apply","renderMatches","updates","createMemoryRouter"],"sourceRoot":""}